# Generated by Django 4.2.7 on 2025-10-06 17:43

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('full_description', models.TextField(blank=True)),
                ('location', models.CharField(max_length=255)),
                ('address', models.TextField(blank=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('registration_deadline', models.DateTimeField(blank=True, null=True)),
                ('max_participants', models.PositiveIntegerField()),
                ('min_participants', models.PositiveIntegerField(default=1)),
                ('required_skills', models.JSONField(blank=True, default=list)),
                ('age_requirement', models.CharField(blank=True, max_length=100)),
                ('physical_requirements', models.TextField(blank=True)),
                ('equipment_needed', models.TextField(blank=True)),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='activities/')),
                ('images', models.JSONField(blank=True, default=list)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending_approval', 'Pending Approval'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('published', 'Published'), ('full', 'Full'), ('join_waitlist', 'Join Waitlist'), ('ongoing', 'Ongoing'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_urgent', models.BooleanField(default=False)),
                ('approval_status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('approved_by_id', models.PositiveIntegerField(blank=True, null=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True)),
                ('admin_notes', models.TextField(blank=True)),
                ('organizer_id', models.PositiveIntegerField()),
                ('organizer_name', models.CharField(max_length=255)),
                ('organizer_email', models.EmailField(max_length=254)),
                ('organizer_phone', models.CharField(blank=True, max_length=20)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('likes_count', models.PositiveIntegerField(default=0)),
                ('shares_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Activity',
                'verbose_name_plural': 'Activities',
                'db_table': 'activities',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ActivityCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, max_length=100)),
                ('color', models.CharField(default='#1890ff', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Activity Category',
                'verbose_name_plural': 'Activity Categories',
                'db_table': 'activity_categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ActivityTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('color', models.CharField(default='#52c41a', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Activity Tag',
                'verbose_name_plural': 'Activity Tags',
                'db_table': 'activity_tags',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ActivityShare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.PositiveIntegerField()),
                ('platform', models.CharField(choices=[('facebook', 'Facebook'), ('twitter', 'Twitter'), ('linkedin', 'LinkedIn'), ('whatsapp', 'WhatsApp'), ('email', 'Email'), ('other', 'Other')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shares', to='activities.activity')),
            ],
            options={
                'verbose_name': 'Activity Share',
                'verbose_name_plural': 'Activity Shares',
                'db_table': 'activity_shares',
            },
        ),
        migrations.AddField(
            model_name='activity',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='activities.activitycategory'),
        ),
        migrations.CreateModel(
            name='ActivityTagMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tag_mappings', to='activities.activity')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_mappings', to='activities.activitytag')),
            ],
            options={
                'verbose_name': 'Activity Tag Mapping',
                'verbose_name_plural': 'Activity Tag Mappings',
                'db_table': 'activity_tag_mappings',
                'unique_together': {('activity', 'tag')},
            },
        ),
        migrations.CreateModel(
            name='ActivityReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.PositiveIntegerField()),
                ('user_name', models.CharField(max_length=255)),
                ('user_avatar', models.URLField(blank=True)),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField()),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='activities.activity')),
            ],
            options={
                'verbose_name': 'Activity Review',
                'verbose_name_plural': 'Activity Reviews',
                'db_table': 'activity_reviews',
                'ordering': ['-created_at'],
                'unique_together': {('activity', 'user_id')},
            },
        ),
        migrations.CreateModel(
            name='ActivityParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.PositiveIntegerField()),
                ('user_name', models.CharField(max_length=255)),
                ('user_email', models.EmailField(max_length=254)),
                ('user_phone', models.CharField(blank=True, max_length=20)),
                ('status', models.CharField(choices=[('applied', 'Applied'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('registered', 'Registered'), ('attended', 'Attended'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show')], default='applied', max_length=20)),
                ('registered_at', models.DateTimeField(auto_now_add=True)),
                ('attended_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('application_message', models.TextField(blank=True)),
                ('skills_match', models.JSONField(blank=True, default=list)),
                ('experience_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('expert', 'Expert')], default='beginner', max_length=20)),
                ('approved_by_id', models.PositiveIntegerField(blank=True, null=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True)),
                ('organizer_notes', models.TextField(blank=True)),
                ('hours_volunteered', models.PositiveIntegerField(default=0)),
                ('rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('feedback', models.TextField(blank=True)),
                ('emergency_contact_name', models.CharField(blank=True, max_length=255)),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=20)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='activities.activity')),
            ],
            options={
                'verbose_name': 'Activity Participant',
                'verbose_name_plural': 'Activity Participants',
                'db_table': 'activity_participants',
                'ordering': ['-registered_at'],
                'unique_together': {('activity', 'user_id')},
            },
        ),
        migrations.CreateModel(
            name='ActivityLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='activities.activity')),
            ],
            options={
                'verbose_name': 'Activity Like',
                'verbose_name_plural': 'Activity Likes',
                'db_table': 'activity_likes',
                'unique_together': {('activity', 'user_id')},
            },
        ),
    ]
