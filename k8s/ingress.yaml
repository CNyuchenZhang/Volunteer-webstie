apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mywork-ingress
  namespace: mywork
  annotations:
    # 如果使用 nginx-ingress-controller
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
spec:
  ingressClassName: nginx
  rules:
  # 生产环境域名
  - host: volunteer-platform.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx-gateway-service
            port:
              number: 80
              
  # 开发环境或本地测试
  - host: localhost
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx-gateway-service
            port:
              number: 80
              
  # 通配符域名支持
  - host: "*.volunteer-platform.com"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx-gateway-service
            port:
              number: 80

---
# 如果使用 NodePort 方式暴露服务（用于测试）
apiVersion: v1
kind: Service
metadata:
  name: nginx-gateway-nodeport
  namespace: mywork
spec:
  type: NodePort
  selector:
    app: nginx-gateway
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
    nodePort: 30080  # 可以通过 <node-ip>:30080 访问

